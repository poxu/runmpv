on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Release runmpv

jobs:
  create-release:
    runs-on: ubuntu-20.04
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true

  windows-executable:
    runs-on: windows-2019
    needs: create-release
    steps:
      - uses: actions/checkout@v1
      - uses: DeLaGuardo/setup-graalvm@master
        with:
          graalvm: '21.3.0'
          java: java17
      - run: java -version
      - name: Set up Visual C Build Tools Workload for Visual Studio 2017 Build Tools
        run: |
          choco install visualstudio2017-workload-vctools
      - name: Install native-image component
        run: |
          gu.cmd install native-image
      - name: compile runmpv.exe and create runmpv.zip
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvars64.bat"
          ./build.bat
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./build/runmpv.zip
          asset_name: runmpv-windows-x86_64.zip
          asset_content_type: application/zip
  linux-executable:
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - uses: actions/checkout@v1
      - uses: DeLaGuardo/setup-graalvm@master
        with:
          graalvm: '21.3.0'
          java: java17
          personal-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check java binary
        run: java -version

      - name: Check gu binary
        run: gu install native-image

      - name: Build runmpv binary
        run: ./build.sh

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./build/runmpv.zip
          asset_name: runmpv-linux-x86_64.zip
          asset_content_type: application/zip
