name: Build linux version of runmpv

on:
  push:
    tags:
      - 'b*'

jobs:
  java17:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        gu-binary: [gu, gu.cmd]
        exclude:
          - os: ubuntu-latest
            gu-binary: gu.cmd
          - os: macos-latest
            gu-binary: gu.cmd
          - os: windows-latest
            gu-binary: gu
    steps:
      - uses: actions/checkout@v1
      - uses: DeLaGuardo/setup-graalvm@master
        with:
          graalvm: '21.3.0'
          java: java17
          personal-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check java binary
        run: java -version

      - name: Check gu binary
        run: ${{ matrix.gu-binary }} install native-image

      - name: Build runmpv binary
        run: ./build.sh

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/runmpv.zip
          asset_name: runmpv.zip
          asset_content_type: application/zip
